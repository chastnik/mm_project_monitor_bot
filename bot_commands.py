"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
import logging
import re
from typing import Optional, Dict, List
from database import db_manager
from mattermost_client import mattermost_client
from scheduler import scheduler

logger = logging.getLogger(__name__)

class BotCommandHandler:
    def __init__(self):
        self.commands = {
            'help': self.cmd_help,
            'subscribe': self.cmd_subscribe,
            'unsubscribe': self.cmd_unsubscribe,
            'list_subscriptions': self.cmd_list_subscriptions,
            'setup_jira': self.cmd_setup_jira,
            'test_jira': self.cmd_test_jira,
            'change_password': self.cmd_change_password,
            'monitor_now': self.cmd_monitor_now,
            'all_subscriptions': self.cmd_all_subscriptions,
            'delete_subscription': self.cmd_delete_subscription,
            'history': self.cmd_history,
            'status': self.cmd_status,
        }
    
    def handle_message(self, message_text: str, user_email: str, channel_type: str = 'D', 
                      channel_id: str = None, team_id: str = None, user_id: str = None) -> Optional[str]:
        """
        –û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        channel_type: 'D' –¥–ª—è –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, 'O' –¥–ª—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        """
        if not message_text.strip():
            return None
        
        # –£–±–∏—Ä–∞–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
        message_text = re.sub(r'@\w+\s*', '', message_text).strip()
        
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É
        parts = message_text.split()
        if not parts:
            return None
        
        command = parts[0].lower()
        args = parts[1:] if len(parts) > 1 else []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
        admin_commands = ['monitor_now', 'all_subscriptions', 'delete_subscription']
        if command in admin_commands and not mattermost_client.is_user_admin(user_email):
            return "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        if command in self.commands:
            try:
                # –ü–µ—Ä–µ–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫–æ–º–∞–Ω–¥ –ø–æ–¥–ø–∏—Å–∫–∏
                if command in ['subscribe', 'unsubscribe', 'list_subscriptions']:
                    return self.commands[command](args, user_email, channel_id, team_id, user_id)
                elif command in ['setup_jira', 'test_jira', 'change_password']:
                    return self.commands[command](args, user_email, user_id)
                else:
                    return self.commands[command](args, user_email)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã {command}: {e}")
                return f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {str(e)}"
        else:
            return self.cmd_help([], user_email)
    
    def cmd_help(self, args: List[str], user_email: str) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
        is_admin = mattermost_client.is_user_admin(user_email)
        
        help_text = """üìã **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤**

**–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira:**
‚Ä¢ `setup_jira` - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)
‚Ä¢ `test_jira` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira
‚Ä¢ `change_password` - –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è Jira

**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã:**
‚Ä¢ `subscribe <PROJECT_KEY>` - –ø–æ–¥–ø–∏—Å–∞—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞
‚Ä¢ `unsubscribe <PROJECT_KEY>` - –æ—Ç–ø–∏—Å–∞—Ç—å –∫–∞–Ω–∞–ª –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞  
‚Ä¢ `list_subscriptions` - –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ

**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚Ä¢ `help` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ `history` - –∏—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
‚Ä¢ `status` - —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏

"""
        
        if is_admin:
            help_text += """**–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**
‚Ä¢ `monitor_now` - –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–µ–π—á–∞—Å
‚Ä¢ `all_subscriptions` - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
‚Ä¢ `delete_subscription <PROJECT_KEY> <CHANNEL_ID>` - —É–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É

"""
        else:
            help_text += """**–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:**
‚Ä¢ _–î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º_

"""
        
        help_text += """**–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
‚Ä¢ `setup_jira` - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira
‚Ä¢ `subscribe MYPROJ` - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞ MYPROJ
‚Ä¢ `test_jira` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ

**–ß—Ç–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç –±–æ—Ç:**
üö® **–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç** - –∫–æ–≥–¥–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –≤—Ä–µ–º—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–ª–∞–Ω–æ–≤–æ–µ
‚è∞ **–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏** - –∫–æ–≥–¥–∞ —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏—Å—Ç–µ–∫, –∞ –æ–Ω–∞ –Ω–µ –∑–∞–∫—Ä—ã—Ç–∞

‚ÑπÔ∏è **–í–∞–∂–Ω–æ:** –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–æ–∫."""
        
        return help_text
    
    def cmd_subscribe(self, args: List[str], user_email: str, channel_id: str = None, 
                     team_id: str = None, user_id: str = None) -> str:
        """–ü–æ–¥–ø–∏—Å–∞—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞"""
        if not args:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –ø—Ä–æ–µ–∫—Ç–∞: `subscribe PROJECT_KEY`"
        
        if not channel_id:
            return "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö"
        
        project_key = args[0].upper()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Jira –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        settings = db_manager.get_user_jira_settings(user_email)
        if not settings:
            return """‚ùå **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Jira –Ω–µ –Ω–∞–π–¥–µ–Ω—ã**

–ü–µ—Ä–µ–¥ –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: `setup_jira`"""
        
        try:
            from user_jira_client import user_jira_client
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Jira —á–µ—Ä–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            project_info = user_jira_client.get_project_info(user_email, project_key)
            if not project_info:
                return f"‚ùå –ü—Ä–æ–µ–∫—Ç {project_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Jira –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞"
            
            project_key, project_name = project_info
            
            # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª
            success = db_manager.subscribe_to_project(
                project_key, project_name, channel_id, team_id, user_id, user_email
            )
            
            if success:
                return f"‚úÖ –ö–∞–Ω–∞–ª –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞ **{project_key}** ({project_name})\n\n" \
                       f"–ë–æ—Ç –±—É–¥–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∑–∞–¥–∞—á–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ:\n" \
                       f"üö® –ü—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç\n" \
                       f"‚è∞ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å—Ä–æ–∫–∞—Ö"
            else:
                return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç"
                
        except Exception as e:
            if "does not exist" in str(e) or "No project could be found" in str(e):
                return f"‚ùå –ü—Ä–æ–µ–∫—Ç {project_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Jira"
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç {project_key}: {e}")
                return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç: {str(e)}"
    
    def cmd_unsubscribe(self, args: List[str], user_email: str, channel_id: str = None,
                        team_id: str = None, user_id: str = None) -> str:
        """–û—Ç–ø–∏—Å–∞—Ç—å –∫–∞–Ω–∞–ª –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        if not args:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–ª—é—á –ø—Ä–æ–µ–∫—Ç–∞: `unsubscribe PROJECT_KEY`"
        
        if not channel_id:
            return "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö"
        
        project_key = args[0].upper()
        
        success = db_manager.unsubscribe_from_project(project_key, channel_id)
        
        if success:
            return f"‚úÖ –ö–∞–Ω–∞–ª –æ—Ç–ø–∏—Å–∞–Ω –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞ **{project_key}**"
        else:
            return f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ø—Ä–æ–µ–∫—Ç {project_key} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ"
    
    def cmd_list_subscriptions(self, args: List[str], user_email: str, channel_id: str = None,
                              team_id: str = None, user_id: str = None) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ"""
        if not channel_id:
            return "‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–∞—Ö"
        
        subscriptions = db_manager.get_subscriptions_by_channel(channel_id)
        
        if not subscriptions:
            return "üìã –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã\n\n" \
                   "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `subscribe PROJECT_KEY` –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–µ–∫—Ç–∞"
        
        result = f"üìã **–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ ({len(subscriptions)}):**\n\n"
        
        for project_key, project_name, subscribed_by, created_at in subscriptions:
            result += f"‚Ä¢ **{project_key}** - {project_name}\n"
            result += f"  _–ü–æ–¥–ø–∏—Å–∞–ª: {subscribed_by}, {created_at[:10]}_\n\n"
        
        result += "–î–ª—è –æ—Ç–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `unsubscribe PROJECT_KEY`"
        
        return result
    
    def cmd_setup_jira(self, args: List[str], user_email: str, user_id: str = None) -> str:
        """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira"""
        if not user_id:
            return "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        existing_settings = db_manager.get_user_jira_settings(user_email)
        
        if not args:
            if existing_settings:
                _, jira_username, _, last_test_success = existing_settings
                status = "‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç" if last_test_success else "‚ùå –æ—à–∏–±–∫–∞"
                return f"""üîß **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Jira:**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {jira_username}
üîó **–°—Ç–∞—Ç—É—Å:** {status}

–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
`setup_jira <username> <password>`

–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: `test_jira`"""
            else:
                return """üîß **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira**

–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
`setup_jira <username> <password>`

**–ü—Ä–∏–º–µ—Ä:**
`setup_jira myusername mypassword`

‚ö†Ô∏è **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ."""
        
        if len(args) < 2:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å: `setup_jira <username> <password>`"
        
        jira_username = args[0]
        jira_password = " ".join(args[1:])  # –ü–∞—Ä–æ–ª—å –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        success = db_manager.save_user_jira_settings(user_email, user_id, jira_username, jira_password)
        
        if success:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            from user_jira_client import user_jira_client
            test_success, test_message = user_jira_client.test_connection(user_email)
            
            if test_success:
                return f"""‚úÖ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Jira —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {jira_username}
üîó **–°—Ç–∞—Ç—É—Å:** {test_message}

–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π `subscribe PROJECT_KEY`"""
            else:
                return f"""‚ö†Ô∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:**

‚ùå {test_message}

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."""
        else:
            return "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Jira"
    
    def cmd_test_jira(self, args: List[str], user_email: str, user_id: str = None) -> str:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira"""
        settings = db_manager.get_user_jira_settings(user_email)
        if not settings:
            return """‚ùå **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Jira –Ω–µ –Ω–∞–π–¥–µ–Ω—ã**

–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: `setup_jira <username> <password>`"""
        
        from user_jira_client import user_jira_client
        success, message = user_jira_client.test_connection(user_email)
        
        return f"""üß™ **–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira:**

{message}

{('–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã!' if success else '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π `setup_jira`')}"""
    
    def cmd_change_password(self, args: List[str], user_email: str, user_id: str = None) -> str:
        """–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è Jira"""
        settings = db_manager.get_user_jira_settings(user_email)
        if not settings:
            return """‚ùå **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Jira –Ω–µ –Ω–∞–π–¥–µ–Ω—ã**

–°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: `setup_jira <username> <password>`"""
        
        if not args:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: `change_password <new_password>`"
        
        new_password = " ".join(args)  # –ü–∞—Ä–æ–ª—å –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã
        _, jira_username, _, _ = settings
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
        success = db_manager.save_user_jira_settings(user_email, user_id, jira_username, new_password)
        
        if success:
            # –û—á–∏—â–∞–µ–º –∫–µ—à –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            from user_jira_client import user_jira_client
            user_jira_client.clear_user_cache(user_email)
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            test_success, test_message = user_jira_client.test_connection(user_email)
            
            if test_success:
                return f"‚úÖ **–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω!**\n\n{test_message}"
            else:
                return f"‚ö†Ô∏è **–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞:**\n\n‚ùå {test_message}"
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è"
    
    def cmd_all_subscriptions(self, args: List[str], user_email: str) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
        subscriptions = db_manager.get_all_subscriptions()
        
        if not subscriptions:
            return "üìã **–í —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫**"
        
        result = f"üìã **–í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–µ ({len(subscriptions)}):**\n\n"
        
        active_count = 0
        inactive_count = 0
        
        for project_key, project_name, channel_id, subscribed_by, created_at, active in subscriptions:
            status = "üü¢" if active else "üî¥"
            if active:
                active_count += 1
            else:
                inactive_count += 1
                
            result += f"{status} **{project_key}** - {project_name or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n"
            result += f"   üì¢ –ö–∞–Ω–∞–ª: `{channel_id}`\n"
            result += f"   üë§ –ü–æ–¥–ø–∏—Å–∞–ª: {subscribed_by}\n"
            result += f"   üìÖ –°–æ–∑–¥–∞–Ω–æ: {created_at[:10]}\n\n"
        
        result += f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:** –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_count}, –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {inactive_count}\n\n"
        result += "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: `delete_subscription PROJECT_KEY CHANNEL_ID`"
        
        return result
    
    def cmd_delete_subscription(self, args: List[str], user_email: str) -> str:
        """–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
        if len(args) < 2:
            return """‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏ –∫–∞–Ω–∞–ª: `delete_subscription PROJECT_KEY CHANNEL_ID`

–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫: `all_subscriptions`"""
        
        project_key = args[0].upper()
        channel_id = args[1]
        
        success = db_manager.delete_subscription_by_id(project_key, channel_id)
        
        if success:
            return f"‚úÖ **–ü–æ–¥–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞**\n\nüìã –ü—Ä–æ–µ–∫—Ç: {project_key}\nüì¢ –ö–∞–Ω–∞–ª: `{channel_id}`"
        else:
            return f"‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {project_key} –≤ –∫–∞–Ω–∞–ª–µ `{channel_id}`"
    
    def cmd_add_user(self, args: List[str], user_email: str) -> str:
        """–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"""
        if not args:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `add_user user@company.com [–ò–º—è –§–∞–º–∏–ª–∏—è]`"
        
        email = args[0].lower().strip()
        name = ' '.join(args[1:]) if len(args) > 1 else None
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è email
        if not re.match(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$', email):
            return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email –∞–¥—Ä–µ—Å–∞"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Mattermost
        mm_user = mattermost_client.get_user_by_email(email)
        mm_user_id = mm_user['id'] if mm_user else None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Jira
        # –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        jira_user = None  # –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–ø–µ—Ä—å
        jira_account_id = None
        
        if not mm_user:
            return f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Mattermost"
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –∏–∑ —Å–∏—Å—Ç–µ–º –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
        if not name:
            if mm_user:
                name = f"{mm_user.get('first_name', '')} {mm_user.get('last_name', '')}".strip()
            elif jira_user:
                name = jira_user['displayName']
            
            if not name:
                name = email
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        success = db_manager.add_user(email, name, mm_user_id, jira_account_id)
        
        if success:
            warnings = []
            if not mm_user:
                warnings.append("–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Mattermost")
            if not jira_user:
                warnings.append("–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Jira")
            
            message = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} ({email}) –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
            if warnings:
                message += f"\n‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {', '.join(warnings)}"
            
            return message
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    
    def cmd_remove_user(self, args: List[str], user_email: str) -> str:
        """–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        if not args:
            return "‚ùå –£–∫–∞–∂–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `remove_user user@company.com`"
        
        email = args[0].lower().strip()
        
        success = db_manager.remove_user(email)
        if success:
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
        else:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    
    def cmd_list_users(self, args: List[str], user_email: str) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        users = db_manager.get_active_users()
        
        if not users:
            return "üìù –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç"
        
        message_parts = ["üìù **–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**\n"]
        
        for i, (email, name, mm_id, jira_id) in enumerate(users, 1):
            status_icons = []
            if mm_id:
                status_icons.append("üí¨")  # Mattermost
            if jira_id:
                status_icons.append("üìã")  # Jira
            
            status = " ".join(status_icons) if status_icons else "‚ùì"
            display_name = name if name else email
            
            message_parts.append(f"{i}. {display_name} ({email}) {status}")
        
        message_parts.append(f"\n**–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:** {len(users)}")
        message_parts.append("\nüí¨ - –Ω–∞–π–¥–µ–Ω –≤ Mattermost, üìã - –Ω–∞–π–¥–µ–Ω –≤ Jira")
        
        return "\n".join(message_parts)
    
    def cmd_monitor_now(self, args: List[str], user_email: str) -> str:
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤—Ä—É—á–Ω—É—é"""
        try:
            from project_monitor import project_monitor
            project_monitor.monitor_all_projects()
            return "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª—ã —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {str(e)}"
    
    def cmd_history(self, args: List[str], user_email: str) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–≤–µ—Ä–æ–∫"""
        days = 7  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞ –Ω–µ–¥–µ–ª—é
        
        if args:
            try:
                days = int(args[0])
                if days < 1 or days > 30:
                    return "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 30"
            except ValueError:
                return "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π"
        
        history = db_manager.get_check_history(days)
        
        if not history:
            return f"üìä –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days} –¥–Ω–µ–π"
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
        by_date = {}
        for check_date, email, name, has_worklog, hours in history:
            if check_date not in by_date:
                by_date[check_date] = {'with': [], 'without': []}
            
            user_info = f"{name or email}"
            if has_worklog:
                user_info += f" ({hours:.1f}—á)"
                by_date[check_date]['with'].append(user_info)
            else:
                by_date[check_date]['without'].append(user_info)
        
        message_parts = [f"üìä **–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞ {days} –¥–Ω–µ–π:**\n"]
        
        for date in sorted(by_date.keys(), reverse=True):
            data = by_date[date]
            message_parts.append(f"**{date}:**")
            
            if data['with']:
                message_parts.append(f"  ‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ ({len(data['with'])}): {', '.join(data['with'])}")
            
            if data['without']:
                message_parts.append(f"  ‚ùå –ù–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ ({len(data['without'])}): {', '.join(data['without'])}")
            
            message_parts.append("")
        
        return "\n".join(message_parts)
    
    def cmd_status(self, args: List[str], user_email: str) -> str:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
        message_parts = ["ü§ñ **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:**\n"]
        
        # –°—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        scheduler_status = "üü¢ –ó–∞–ø—É—â–µ–Ω" if scheduler.running else "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        message_parts.append(f"**–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫:** {scheduler_status}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
        try:
            # –¢–µ—Å—Ç Mattermost
            mm_status = "üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω"
            if mattermost_client.driver:
                me = mattermost_client.driver.users.get_user('me')
                mm_status += f" ({me['username']})"
        except:
            mm_status = "üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        
        message_parts.append(f"**Mattermost:** {mm_status}")
        
        # –¢–µ—Å—Ç Jira
        try:
            from jira_client import jira_client
            jira_status = "üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω"
            if jira_client.jira_client:
                current_user = jira_client.jira_client.current_user()
                jira_status += f" ({current_user})"
        except:
            jira_status = "üî¥ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        
        message_parts.append(f"**Jira:** {jira_status}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db_manager.get_active_users()
        message_parts.append(f"**–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** {len(users)}")
        
        # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        history = db_manager.get_check_history(1)
        if history:
            last_check = history[0][0]  # –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            message_parts.append(f"**–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:** {last_check}")
        else:
            message_parts.append("**–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:** –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª–∞—Å—å")
        
        return "\n".join(message_parts)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥
command_handler = BotCommandHandler()
