#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Project Monitor Bot
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./stop_bot.sh [--force]

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PID_FILE="$SCRIPT_DIR/bot.pid"
FORCE_STOP=false

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ "$1" = "--force" ]; then
    FORCE_STOP=true
fi

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Project Monitor Bot"
echo "================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è graceful –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
graceful_stop() {
    local pid=$1
    echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ SIGTERM –ø—Ä–æ—Ü–µ—Å—Å—É $pid..."
    
    kill -TERM "$pid" 2>/dev/null || {
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SIGTERM"
        return 1
    }
    
    # –ñ–¥–µ–º –¥–æ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è graceful –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    local count=0
    while [ $count -lt 30 ]; do
        if ! ps -p "$pid" > /dev/null 2>&1; then
            echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω gracefully"
            return 0
        fi
        sleep 1
        count=$((count + 1))
        if [ $((count % 5)) -eq 0 ]; then
            echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è... ($count/30)"
        fi
    done
    
    echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
force_stop() {
    local pid=$1
    echo "üí• –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $pid..."
    
    kill -KILL "$pid" 2>/dev/null || {
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å"
        return 1
    }
    
    sleep 2
    if ps -p "$pid" > /dev/null 2>&1; then
        echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    else
        echo "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
stop_by_name() {
    echo "üîç –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ Project Monitor Bot..."
    
    # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Python —Å main.py
    local pids=$(pgrep -f "python.*main.py" 2>/dev/null || true)
    
    if [ -z "$pids" ]; then
        echo "‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    echo "üìã –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã: $pids"
    
    for pid in $pids; do
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $pid..."
        if $FORCE_STOP; then
            force_stop "$pid"
        else
            graceful_stop "$pid" || force_stop "$pid"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤
cleanup() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª
    if [ -f "$PID_FILE" ]; then
        rm -f "$PID_FILE"
        echo "‚úÖ PID —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω"
    fi
    
    # –£–¥–∞–ª—è–µ–º lock —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    find "$SCRIPT_DIR" -name "*.lock" -delete 2>/dev/null || true
    
    echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
    if [ -f "$PID_FILE" ]; then
        BOT_PID=$(cat "$PID_FILE")
        echo "üìã –ù–∞–π–¥–µ–Ω PID —Ñ–∞–π–ª: $BOT_PID"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
        if ps -p "$BOT_PID" > /dev/null 2>&1; then
            echo "üéØ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID: $BOT_PID"
            
            if $FORCE_STOP; then
                force_stop "$BOT_PID"
            else
                graceful_stop "$BOT_PID" || force_stop "$BOT_PID"
            fi
        else
            echo "‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å —Å PID $BOT_PID —É–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        fi
    else
        echo "‚ÑπÔ∏è PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    stop_by_name
    
    # –û—á–∏—Å—Ç–∫–∞
    cleanup
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
    local remaining=$(pgrep -f "python.*main.py" 2>/dev/null | wc -l)
    
    if [ "$remaining" -eq 0 ]; then
        echo "üéâ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Project Monitor Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo "‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –æ—Å—Ç–∞–ª–∏—Å—å —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã ($remaining)"
        echo "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./stop_bot.sh --force"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo "üìä –°—Ç–∞—Ç—É—Å Project Monitor Bot"
    echo "============================="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
    if [ -f "$PID_FILE" ]; then
        BOT_PID=$(cat "$PID_FILE")
        if ps -p "$BOT_PID" > /dev/null 2>&1; then
            echo "üü¢ –°—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç (PID: $BOT_PID)"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
            echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ:"
            ps -p "$BOT_PID" -o pid,ppid,cmd,etime,pcpu,pmem --no-headers | while read line; do
                echo "   $line"
            done
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
            if [ -f "$SCRIPT_DIR/bot.log" ]; then
                echo ""
                echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
                tail -5 "$SCRIPT_DIR/bot.log" | sed 's/^/   /'
            fi
        else
            echo "üî¥ –°—Ç–∞—Ç—É—Å: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π PID —Ñ–∞–π–ª)"
        fi
    else
        echo "üî¥ –°—Ç–∞—Ç—É—Å: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    local other_pids=$(pgrep -f "python.*main.py" 2>/dev/null || true)
    if [ -n "$other_pids" ]; then
        echo ""
        echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥—Ä—É–≥–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python —Å main.py:"
        echo "$other_pids" | while read pid; do
            if [ "$pid" != "$BOT_PID" ]; then
                echo "   PID: $pid"
            fi
        done
    fi
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-stop}" in
    "status")
        show_status
        ;;
    "stop"|"--force")
        main
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [stop|status|--force]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  stop     - Graceful –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  --force  - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞"
        echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
        exit 1
        ;;
esac
